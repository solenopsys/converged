import {
	countTokensInFile,
	checkContextLimit,
	countTokensInText,
} from "./tokenCounter";

// –ü—Ä–∏–º–µ—Ä 1: –ü–æ–¥—Å—á–µ—Ç —Ç–æ–∫–µ–Ω–æ–≤ –≤ —Ñ–∞–π–ª–µ
async function analyzeFile() {
	try {
		const result = await countTokensInFile("./result.md", "gpt-4.1-nano");

		console.log("üìä –ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞:");
		console.log(`–§–∞–π–ª: ${result.filePath}`);
		console.log(`–ú–æ–¥–µ–ª—å: ${result.model}`);
		console.log(`–¢–æ–∫–µ–Ω–æ–≤: ${result.tokenCount.toLocaleString()}`);
		console.log(`–°–∏–º–≤–æ–ª–æ–≤: ${result.charCount.toLocaleString()}`);
		console.log(`–°–ª–æ–≤: ${result.wordCount.toLocaleString()}`);
		console.log(`–°—Ä–µ–¥–Ω–µ–µ —Ç–æ–∫–µ–Ω–æ–≤ –Ω–∞ —Å–ª–æ–≤–æ: ${result.avgTokensPerWord}`);
		console.log(`–ü—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏: $${result.estimatedInputCost}`);
		console.log("---");
	} catch (error) {
		console.error("–û—à–∏–±–∫–∞:", error);
	}
}

// –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤
async function main() {
	await analyzeFile();
}

// –ï—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (import.meta.main) {
	main();
}
